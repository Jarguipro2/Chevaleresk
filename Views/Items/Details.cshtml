@model EFA_DEMO.Models.Item

@{ ViewBag.Title = "Details";
    EFA_DEMO.Models.UserView onlineUser = EFA_DEMO.Models.OnlineUsers.CurrentUser;

}
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.3.0/css/font-awesome.min.css" rel="stylesheet">
<link href="~/Content/fontawesome-stars.css" rel="stylesheet">

<h2 style="font-style: italic">
    <u>
        <b>
            @Html.DisplayFor(model => model.Name)
        </b>
    </u>
</h2>
<div>
    @if (OnlineUsers.CurrentUserIsAdmin())
    {
        @Helper.GlyphiconAction("../Items/Edit/" + Model.IdObject, "glyphicon glyphicon-cog", "Editer l'objet")
        @Helper.GlyphiconAction("../Items/Delete/" + Model.IdObject, "glyphicon glyphicon-trash", "Supprimer l'objet")
    }
</div>

<div class="container body-content">
    <table>
        <tbody>
            <tr>
                <td>
                    <img src="@Model.GetAvatarURL().Substring(1)" />
                </td>
                <td>
                    <div>
                        <dl class="dl-horizontal">
                            <br />
                            <dt>
                                @Html.DisplayNameFor(model => model.StockQuantity):
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.StockQuantity)
                            </dd>
                            <br />
                            <dt>
                                @Html.DisplayNameFor(model => model.Price):
                            </dt>

                            <dd>
                                @Html.DisplayFor(model => model.Price)$
                            </dd>
                            <br />
                            <dt>
                                Type:
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Items_Type.Name)
                            </dd>
                            <br />
                        </dl>
                    </div>
                </td>
            </tr>
            <tr>
            </tr>
        </tbody>
    </table>
    <p>
        @if (onlineUser != null)
        {
            using (Html.BeginForm("Add", "ShoppingCart", FormMethod.Post))
            {
                @Html.Hidden("id", Model.IdObject);
                <p>
                    <select style="margin-left: 45%" name="quantityReceive" class="selectQuantity form-control quantity-input" id="@Model.IdObject" data-old-value="">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                        <option value="8">8</option>
                        <option value="9">9</option>
                        <option value="10+">10+</option>
                    </select>
                </p>
                <button style="margin-left: 45%" class="btn btn-default btn-primary" type="submit" value="ajouter au panier">Ajouter au panier</button>
            }
        }
    </p>
    <div style="justify-content: space-between; display: flex; flex-flow: row; ">
        @Helper.GlyphiconAction("../Items/Index", "glyphicon-arrow-left lightgreen", "Continuer vos achats")
    </div>

    <div class="container">
        <div class="be-comment-block">
            <h1 class="comments-title">Commentaire (@Model.Items_Reviews.Count)</h1>
            @foreach (var review in Model.Items_Reviews)
            {
                <div class="be-comment">
                    <div class="be-img-comment">
                        <a href="blog-detail-2.html">
                            <img src="@review.User.ToUserView().GetAvatarURL().Substring(1)" alt="" class="be-ava-comment">
                        </a>
                    </div>
                    <div class="be-comment-content">

                        <span class="be-comment-name">
                            <a href="blog-detail-2.html">@review.User.FullName</a>
                            <select class="ratingBar" data-current-rating="@review.Star">
                                <option value="1">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                            </select>
                        </span>

                        <p class="be-comment-text">
                            @review.Review
                        </p>
                    </div>
                </div>}

            @if (ViewBag.currentUserOwnThisItem != null && ViewBag.currentUserOwnThisItem)
            {
                using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="form-group">
                                <h1 class="comments-title">Votre évaluation: </h1>
                                <select name="Star" class="ratingBar">
                                    <option value="1">1</option>
                                    <option value="2">2</option>
                                    <option value="3">3</option>
                                    <option value="4">4</option>
                                    <option value="5">5</option>
                                </select>
                                <textarea name="Review" class="form-input" required="" placeholder="Votre commentaire" style="max-width: 100% !important;"></textarea>
                            </div>
                        </div>
                        <input class="btn btn-primary pull-right" type="submit" value="Publier">
                    </div>
                }
            }

        </div>

    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery.barrating.min.js"></script>
    <script type="text/javascript">

        $('.ratingBar').each(function (index, rating) {
            var $rating = $(rating);
            $rating.barrating({
                theme: 'fontawesome-stars',
                initialRating: $rating.attr('data-current-rating')
            });
        });
        
        $(() => {
            $(".selectQuantity").each((_, elem) => {
                $elem = $(elem)
                console.log($elem)
                $val = $elem.attr("data-old-value")//pour l'Initialisation
                $firstTime = true
                if ($firstTime) {
                    $elem.children().each((index, option) => {
                        $option = $(option)
                        if ($option.val() == $val) {
                            $option.attr("selected", "selected")
                        }
                    })
                    $firstTime = false;
                }
                if ($elem.is("input")) {
                    $elem.click((evt) => {
                        $elem = $(evt.currentTarget)
                        $elem.select()
                    });
                }

                $($elem).change((evt) => {
                    $elem = $(evt.currentTarget) //select
                    $parent = $elem.parent() //container
                    if ($elem.val() == "10+") {
                        $elem.remove()
                        $(`<input style="margin-left: 45%" class='selectQuantity form-control quantity-input' maxlength='3' name="quantityReceive" id='${$elem.attr('id')}' value='${$elem.attr("data-old-value")}'/>`)
                            .appendTo($parent).select()
                            .blur((evt) => {
                                $elem = $(evt.currentTarget) // Input
                                console.log($elem)
                            }).click((evt) => {
                                $elem = $(evt.currentTarget)
                                $elem.select()
                            });
                    }
                })
            })
            $(".money").each((_, elem) => {
                $(elem).simpleMoneyFormat();
            });
        })

    </script>
}