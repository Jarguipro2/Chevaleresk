@model EFA_DEMO.Models.Item

@{
    ViewBag.Title = "Create";
}

<h2>Ajouter un nouvel item</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "TypeList" }))
{
@Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Item</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StockQuantity, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.StockQuantity, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StockQuantity, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.PictureGUID, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <div style="width:200px">
                                @Helper.ImageUploader(Model.IdObject, Model.GetAvatarURL(), "AvatarImageData", "~/Images/Loading_icon.gif", "Cliquez pour choisir votre avatar")
                                @Html.ValidationMessage("AvatarImageData", "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.IdType, "Type d'objet", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(m => m.IdType, new SelectList(new Dictionary<int, string> { { 0, "Arme" }, { 1, "Armure" }, { 2, "Potion" }, { 3, "Ressource" } }, "Key", "Value"), "Sélectionner un genre d'arme", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.IdType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Efficacite, htmlAttributes: new { @class = "control-label col-md-2", id = "efficacite" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Efficacite, new { htmlAttributes = new { @class = "form-control", id = "efficaciteText" } })
                            @Html.ValidationMessageFor(model => model.Efficacite, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2", id = "genre" })
                        <div class="col-md-10" id="genreType">
                            @Html.DropDownListFor(model => model.Genre, new SelectList(new Dictionary<int, string> { { 0, "Une main" }, { 1, "Deux main" } }, "Key", "Value"), "Sélectionner un genre d'arme", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2", id = "description" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", id = "descriptionText" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Matiere, htmlAttributes: new { @class = "control-label col-md-2", id = "matiere" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Matiere, new { htmlAttributes = new { @class = "form-control", id = "matiereText" } })
                            @Html.ValidationMessageFor(model => model.Matiere, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Poid, htmlAttributes: new { @class = "control-label col-md-2", id = "poid" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Poid, new { htmlAttributes = new { @class = "form-control", id = "poidText" } })
                            @Html.ValidationMessageFor(model => model.Poid, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Taille, htmlAttributes: new { @class = "control-label col-md-2", id = "taille" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Taille, new { htmlAttributes = new { @class = "form-control", id = "tailleText" } })
                            @Html.ValidationMessageFor(model => model.Taille, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Effet, htmlAttributes: new { @class = "control-label col-md-2", id = "effet" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Effet, new { htmlAttributes = new { @class = "form-control", id = "effetText" } })
                            @Html.ValidationMessageFor(model => model.Effet, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.Duree, htmlAttributes: new { @class = "control-label col-md-2", id = "duree" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Duree, new { htmlAttributes = new { @class = "form-control", id = "dureeText" } })
                            @Html.ValidationMessageFor(model => model.Duree, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Create" class="btn btn-default" />
                        </div>
                    </div>
                </div>}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script src="~/Scripts/jquery-3.4.1.js"></script>
<script>$(document).ready(function () {
        $("#efficacite").css("display", "none");
        $("#efficaciteText").css("display", "none");
        $("#genre").css("display", "none");
        $("#genreType").css("display", "none");
        $("#description").css("display", "none");
        $("#descriptionText").css("display", "none");
        $("#matiere").css("display", "none");
        $("#matiereText").css("display", "none");
        $("#poid").css("display", "none");
        $("#poidText").css("display", "none");
        $("#taille").css("display", "none");
        $("#tailleText").css("display", "none");
        $("#effet").css("display", "none");
        $("#effetText").css("display", "none");
        $("#duree").css("display", "none");
        $("#dureeText").css("display", "none");
        $("#TypeList").change(function () {
            var a = $("#TypeList Option:selected").val();
            if (a == 0) {
                $("#efficacite").css("display", "block");
                $("#efficaciteText").css("display", "block");
                $("#genre").css("display", "block");
                $("#genreType").css("display", "block");
                $("#description").css("display", "block");
                $("#descriptionText").css("display", "block");
                $("#matiere").css("display", "none");
                $("#matiereText").css("display", "none");
                $("#poid").css("display", "none");
                $("#poidText").css("display", "none");
                $("#taille").css("display", "none");
                $("#tailleText").css("display", "none");
                $("#effet").css("display", "none");
                $("#effetText").css("display", "none");
                $("#duree").css("display", "none");
                $("#dureeText").css("display", "none");
            }
            if (a == 1) {
                $("#efficacite").css("display", "none");
                $("#efficaciteText").css("display", "none");
                $("#genre").css("display", "none");
                $("#genreType").css("display", "none");
                $("#description").css("display", "none");
                $("#descriptionText").css("display", "none");
                $("#matiere").css("display", "block");
                $("#matiereText").css("display", "block");
                $("#poid").css("display", "block");
                $("#poidText").css("display", "block");
                $("#taille").css("display", "block");
                $("#tailleText").css("display", "block");
                $("#effet").css("display", "none");
                $("#effetText").css("display", "none");
                $("#duree").css("display", "none");
                $("#dureeText").css("display", "none");
            }
            if (a == 2) {
                $("#efficacite").css("display", "none");
                $("#efficaciteText").css("display", "none");
                $("#genre").css("display", "none");
                $("#genreType").css("display", "none");
                $("#description").css("display", "none");
                $("#descriptionText").css("display", "none");
                $("#matiere").css("display", "none");
                $("#matiereText").css("display", "none");
                $("#poid").css("display", "none");
                $("#poidText").css("display", "none");
                $("#taille").css("display", "none");
                $("#tailleText").css("display", "none");
                $("#effet").css("display", "block");
                $("#effetText").css("display", "block");
                $("#duree").css("display", "block");
                $("#dureeText").css("display", "block");
            }
            if(a == 3 || a == "") {
                $("#efficacite").css("display", "none");
                $("#efficaciteText").css("display", "none");
                $("#genre").css("display", "none");
                $("#genreType").css("display", "none");
                $("#description").css("display", "none");
                $("#descriptionText").css("display", "none");
                $("#matiere").css("display", "none");
                $("#matiereText").css("display", "none");
                $("#poid").css("display", "none");
                $("#poidText").css("display", "none");
                $("#taille").css("display", "none");
                $("#tailleText").css("display", "none");
                $("#effet").css("display", "none");
                $("#effetText").css("display", "none");
                $("#duree").css("display", "none");
                $("#dureeText").css("display", "none");
            }
        })
    });</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/imageUploader")
}
